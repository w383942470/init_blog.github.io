[{"title":"Hexo博客新建文章","url":"/2021/08/11/Hexo_Article/","content":"创建新文章一、新文章创建命令hexo new &lt;模板名称&gt; &lt;文件名称&gt;\n二、模板名称简介\n\n\n模板名称\n作用\n路径\n\n\n\npost\n新建文章\n/source/_posts/\n\n\ndraft\n新建草稿\n/source/_drafts/\n\n\npage\n新建页面(如标签、分类)\n/source/\n\n\n提示：此处的文件名称非文章名称，而是在source/_posts目录下创建的.md文件名称\n\n编辑新文章内容（基于 Markdown）一、编辑头部信息打开刚刚创建的.md文件，我们可以看到被两个”—“包围的区域，在此区域中可填写以下参数\n\n\n\n参数名称\n作用\n\n\n\ntitle\n网站标题\n\n\ntags\n文章标签，支持多个。(如：[博客,前端])\n\n\ncategories\n文章分类(如：前端)\n\n\n二、基本语法1.什么是Markdown？Markdown 是一种可以使用普通文本编辑器编写的 标记语言，通过简单的 标记语法，它可以使普通文本内容具有一定的格式。\n2.Markdown基本语法1.标题。一共支持六级# //一级标题## //二级标题### //三级标题#### //四级标题##### //五级标题###### //六级标题\n2.字体*斜体* //左右分别用一个*号包起来**加粗** //左右分别用两个*号包起来***斜体加粗*** //左右分别用三个*号包起来~~删除线~~ //左右分别用两个~~号包起来\n3.引用在引用的文字前加上”&gt;”即可\n&gt; 这是引用的内容&gt;&gt; 这是引用的内容&gt;&gt;&gt; 这是引用的内容\n4.分割线三个或者三个以上的 - 或者 * 都可以。\n-------********\n5.图片如果要在本地上传图片，那首先得安装图片插件\nnpm install hexo-asset-image --save\n安装完成后再新建一个文章，此时我们会发现在_posts文件夹下出现了一个与文件名称相同的文件夹\nhexo new post article\n接下来我们将需要用到的图片放入对应的文件夹中，并在需要显示图片的地方输入以下内容即可\n![这是一张图片](article/img.png) //![图片描述](图片路径) \n提示：注意文件夹名称必须与文件名称一致\n\n6.表格|标题|标题||---|---||内容|内容||内容|内容|\n7.超链接[打开百度](http://www.baidu.com, &quot;这是百度链接&quot;) //[链接文字](链接地址 &quot;链接描述&quot;)","categories":["WEB前端"],"tags":["Hexo","博客"]},{"title":"如何搭建Hexo博客并部署到GitHub","url":"/2021/08/09/Web_Hexo/","content":"什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。\n环境一、安装Git、Nodejs、Hexo1.安装GitWindows：可通过Git官网自行下载安装，一路Next，记住将路径加到环境变量中。\nLinux：\n1.1 检查git是否已经安装git --version\n如果出现以下提示直接下一步：\n[root@VM_0_5_centos /]# git --versiongit version 2.27.GIT\n\n1.2 安装Git如果出现的提示是Not Find那就进行以下命令进行安装吧\nyum -y install git\n1.3 检查Git版本安装完成后输入命令查看Git版本：\n[root@VM_0_5_centos /]# git --versiongit version 2.27.GIT\n\n提示：yum安装git被安装在/usr/libexec/git-core目录下\n\n2.安装NodejsWindows：\n2.1 Node.js 官方网站下载，并且选择操作系统对应的包2.2 下载完成后一路next即可提示：切记，将exe文件路径添加至环境变量中\n\nLinux：\n2.1 Node.js 官方网站下载，并且选择操作系统对应的包2.2 将安装包上传到指定位置，并解压tar -xvf node-v10.6.0-linux-x64.tar.xz\n2.3 通过建立软连接变为全局ln -s /usr/local/application/nodejs/bin/npm /usr/local/bin/ln -s /usr/local/application/nodejs/bin/node /usr/local/bin/\n2.4 检查是否安装成功node-v\n3.安装Hexo3.1 安装Hexo当Git以及node.js安装完毕后，即可开始安装Hexo，首先先创建一个文件夹(用于存放code)，使用 git bash 进入该文件夹，输入命令：\nnpm install -g hexo-cli\n3.2 查看Hexo版本安装完成后，查看版本\nhexo -v\n当看到打印出来的版本号后，说明以及安装完成\n二、生成Hexo初始化Hexohexo init myblog //文件夹名称\n安装依赖包npm install\n当新建完成后，将会出现以下文件夹\n1.node_modules：依赖包2.public：生成的页面3.scaffolds：文章模板4.source：文章5.themes：主题6._config.yml：配置文件三、启动Hexo项目启动1.生成静态文件hexo generate\n也可以简写为\nhexo g\n2.生成静态文件hexo server\n也可以简写为\nhexo s\n完成以上操作后，根据提示在浏览器输入localhost:4000即可打开看到你的博客啦~\n\n\n三、部署至GitHub中的1.GitHub创建仓库在GitHub中创建一个自己的仓库\n1.1 生成SSH并添加至GitHub中1.配置Git相关信息\ngit config --global user.name &quot;你的用户名&quot;git config --global user.email &quot;你的email&quot;\n2.创建SSH，输入命令后一路回车\nssh-keygen -t rsa -C &quot;youremail&quot;\n创建完成后会在本地生成一个文件夹，在文件夹中找到id_rsa.pub，复制出来\nC:\\Users\\think\\.ssh //路径\nid_rsa是当前计算机的私人秘钥，id_rsa.pub是公共秘钥。把公钥放在GitHub上，这样GitHub就会根据公钥去匹配你的私钥，当匹配上了后，就能够通过git上传你的文件到GitHub。\n然后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key 把刚刚复制的信息放进去\n1.2 在GitHub创建仓库点击右上角+号，选择new repository，在Repository name中输入：\n你的用户名.github.io\n点击Create repository即可完成项目创建\n2.将Hexo部署到GitHub Pages中2.1 修改配置文件1.打开根目录下的_config.yml文件，拉到最后\ndeploy:    type: git    repository: https://github.com/你的用户名/你的用户名.github.io.git    branch: master //分支名称\n2.2 安装上传渲染插件需要安装deploy-git，这样才可以部署到GitHub中\nnpm install hexo-deployer-git --save\n2.3 部署输入完整命令进行部署\nhexo cleanhexo generatehexo deploy\n也可以输入简化命令\nhexo clean //清除之前生成的文件，也可不加hexo g //生成静态文件hexo d //部署\n2.4 GitHub中配置GitHub Pages进入刚刚创建的仓库中，打开Setting-Pages，选择需要部署的分支以及读取的根目录，点击save后，页面将会将部署后可访问的域名展示出来，直接访问即可\n\n","categories":["WEB前端"],"tags":["Hexo","博客"]},{"title":"Screen的使用方法","url":"/2021/08/06/Server_Screen/","content":"为什么要使用screen命令VPS侦探在刚接触Linux时最怕的就是SSH远程登录Linux VPS编译安装程序时（比如安装lnmp）网络突然断开，或者其他情况导致不得不与远程SSH服务器链接断开，远程执行的命令也被迫停止，只能重新连接，重新运行。相信现在有些VPSer也遇到过这个问题，今天就给VPSer们介绍一款远程会话管理工具 - screen命令。\n一、screen命令是什么？Screen是一个可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。Screen中有会话的概念，用户可以在一个screen会话中创建多个screen窗口，在每一个screen窗口中就像操作一个真实的telnet/SSH连接窗口那样。\n二、如何安装screen命令？除部分精简的系统或者定制的系统大部分都安装了screen命令，如果没有安装，CentOS系统可以执行：\nyum install screen\nCentOS 8上移除了screen，需要安装epel后安装screen执行：\nyum install screen\nDebian/Ubuntu系统执行：\napt-get install screen\n三、screen命令使用方法？1、常用的使用方法用来解决文章开始我们遇到的问题，比如在安装lnmp时。\n1.1 创建screen会话screen创建一个名字为lnmp的会话。 VPS侦探 https://www.vpser.net/; 可以先执行：\nscreen -S lnmp\n1.2 暂时离开，保留screen会话中的任务或程序当需要临时离开时（会话中的程序不会关闭，仍在运行）可以用快捷键Ctrl+a d(即按住Ctrl，依次再按a,d)\n1.3 恢复screen会话恢复到离开前创建的lnmp会话的工作界面,执行：\naaaq lnmp \n如果忘记了,或者当时没有指定会话名,列出当前存在的会话列表,可以执行：\nscreen -ls screen\n11791.lnmp即为刚才的screen创建的lnmp会话，目前已经暂时退出了lnmp会话，所以状态为Detached，当使用\nscreen -r lnmp\n后状态就会变为Attached，11791是这个screen的会话的进程ID，恢复会话时也可以使用：\nscreen -r 11791\n\n1.4 关闭screen的会话执行：\nexit\n会提示：[screen is terminating]，表示已经成功退出screen会话。VPS侦探 https://www.vpser.net/\n1.5 删除会话screen -S session_name -X quit\nor\nscreen -X -S 122128 quit\n2、远程演示首先演示者先在服务器上执行:\nscreen -S test\n创建一个screen会话，观众可以链接到远程服务器上执行:\nscreen -x test\n观众屏幕上就会出现和演示者同步。\n3、常用快捷键3.1 在当前screen会话中创建窗口Ctrl+a c\n3.2 窗口列表Ctrl+a w\n3.3 下一个窗口Ctrl+a n\n3.4 上一个窗口Ctrl+a p\n3.5 在第0个窗口和第9个窗口之间切换Ctrl+a 0-9\n","categories":["服务器"],"tags":["Linux","部署"]}]